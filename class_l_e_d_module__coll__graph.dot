digraph "LEDModule"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{LEDModule\n|+ kFrequency\l+ kPeriod\l+ kPriority\l- dotStarNCS\l- missedSuperLoopToggle\l- missedModuleRunToggle\l- IOExpanderErrorLEDMask\l|+ LEDModule()\l+ start()\l+ entry()\l+ fpgaInitialized()\l+ radioInitialized()\l+ kickerInitialized()\l+ fullyInitialized()\l+ missedSuperLoop()\l+ missedModuleRun()\l- setColor()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{GenericModule\n|+ period\l+ name\l+ priority\l+ stackSize\l+ handle\l|+ GenericModule()\l+ start()\l+ entry()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_generic_module.html",tooltip="Interface for all modules, so that they can be ran by the scheduler. "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -ioExpander" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{LockedStruct\< MCP23017 \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{MCP23017\n|- _i2cAddress\l- _cachedGPIO\l- _cachedIODIR\l- _cachedGPPU\l- _cachedIPOL\l|+ MCP23017()\l+ init()\l+ reset()\l+ writePin()\l+ writeMask()\l+ readPin()\l+ config()\l+ writeRegister()\l+ readRegister()\l+ pinMode()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_m_c_p23017.html",tooltip="Allow access to an I2C-connected MCP23017 16-bit I/O extender chip. "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -_i2c" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{LockedStruct\< I2C \>\n|- value\l- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node7 -> Node6 [dir="back",color="orange",fontsize="10",style="solid",label=" \< I2C \>" ,fontname="Helvetica"];
  Node7 [label="{LockedStruct\< T \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ LockedStruct()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html",tooltip="A locked-struct abstraction. "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< MCP23017 \>" ,fontname="Helvetica"];
  Node9 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -radioError" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{LockedStruct\< RadioError \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{RadioError\n|+ isValid\l+ initialized\l+ lastUpdate\l+ hasError\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_radio_error.html",tooltip="Contains data on whether Radio is working properly on not. "];
  Node7 -> Node9 [dir="back",color="orange",fontsize="10",style="solid",label=" \< RadioError \>" ,fontname="Helvetica"];
  Node11 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -fpgaStatus" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{LockedStruct\< FPGAStatus \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{FPGAStatus\n|+ isValid\l+ initialized\l+ lastUpdate\l+ motorHasErrors\l+ FPGAHasError\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_f_p_g_a_status.html",tooltip="Contains data on whether FPGA and motors are working or not. "];
  Node7 -> Node11 [dir="back",color="orange",fontsize="10",style="solid",label=" \< FPGAStatus \>" ,fontname="Helvetica"];
  Node13 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -dotStarSPI" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{LockedStruct\< SPI \>\n|- value\l- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node7 -> Node13 [dir="back",color="orange",fontsize="10",style="solid",label=" \< SPI \>" ,fontname="Helvetica"];
  Node14 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -leds" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{std::array\< DigitalOut, 4 \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node14 [dir="back",color="orange",fontsize="10",style="solid",label=" \< DigitalOut, 4 \>" ,fontname="Helvetica"];
  Node15 [label="{std::array\< T \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node8 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -kickerInfo" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{LockedStruct\< KickerInfo \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{KickerInfo\n|+ isValid\l+ initialized\l+ lastUpdate\l+ kickerHasError\l+ kickerCharged\l+ ballSenseTriggered\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_kicker_info.html",tooltip="Contains status on kicker and breakbeam. "];
  Node7 -> Node16 [dir="back",color="orange",fontsize="10",style="solid",label=" \< KickerInfo \>" ,fontname="Helvetica"];
  Node18 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -batteryVoltage" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{LockedStruct\< BatteryVoltage \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{BatteryVoltage\n|+ isValid\l+ lastUpdate\l+ rawVoltage\l+ isCritical\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_battery_voltage.html",tooltip="Contains battery voltage data and whether it&#39;s at a critical level. "];
  Node7 -> Node18 [dir="back",color="orange",fontsize="10",style="solid",label=" \< BatteryVoltage \>" ,fontname="Helvetica"];
}
