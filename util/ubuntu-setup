#!/bin/bash -e

HELP_STR="Usage: ./ubuntu-setup [-y | --yes] [-n | --noclobber] [-c | --clobber] [-f | --firmware] [-nf | --nofirmware] [-osl | --overwrite-sources-list ] [-h | --help]

\tyes:\t\t\tassume no user input
\tnoclobber:\t\tdont install 3rd party repositories
\tclobber:\t\tInstall 3rd party repositories
\tfirmware:\t\tInstall firmware repository
\tnofirmware:\t\tPrevents installation of firmware deps firmware repository
\toverwrite-sources-list:\tOverwrites the sources.list with gatech mirrors for faster ubuntu-setup. Only works on ubuntu > precise.
\thelp:\t\t\tprint this message!

This script will need root privileges"

# defaults!
OVERWRITE_SOURCES=false
YES=false

# parse command line args
for i in "$@"
do
    case $i in
        -y|--yes)
            YES=true
            ;;
        -h|--help)
            echo -e "$HELP_STR"
            exit 1
            ;;
        *)
            echo "Unrecognized Option: $i"
            echo -e "\n$HELP_STR"
            exit 1
            # unknown options
            ;;
    esac
done

# Become root
if [ $UID -ne 0 ]; then
	echo "-- Becoming root"
	exec sudo $0 $@
fi

apt-get update

# unset DPKG_FLAGS

BASE=$(readlink -f $(dirname $0)/..)

echo "-- Installing required packages"

# if yes option is checked, add  a -y
ARGS=""
if $YES; then
    ARGS="-y"
fi

PACKAGES="$(sed 's/#.*//;/^$/d' $BASE/util/ubuntu-packages.txt)"

# install all of the packages listed in required_packages.txt
apt-get install $ARGS $PACKAGES

# install python3 requirements
pip3 install stylize>=0.3.0 # code reformatting and checkstyling
pip3 install conan

# This script is run as sudo, but we don't want submodules to be owned by the
# root user, so we use `su` to update submodules as the normal user
echo "-- Updating submodules"
SETUP_USER="$SUDO_USER"
if [ -z "$SETUP_USER" ]; then
    SETUP_USER="$(whoami)"
fi

echo "-- Setting up remote for conan packages"
conan remote add robojackets https://api.bintray.com/conan/robojackets/conan

chown -R $SETUP_USER:$SETUP_USER $BASE/external
su $SETUP_USER -c 'git submodule sync'
su $SETUP_USER -c 'git submodule update --init'
