digraph "KickerBoard"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{KickerBoard\n|- verbose\l- isChargedCutoff\l- _ball_sensed\l- _is_healthy\l- _current_voltage\l- _is_kick\l- _kick_immediate\l- _kick_breakbeam\l- _cancel_kick\l- _charge_allowed\l- _kick_strength\l|+ KickerBoard()\l+ flash()\l+ flash()\l+ kickType()\l+ kick()\l+ kickOnBreakbeam()\l+ cancelBreakbeam()\l+ isBallSensed()\l+ getVoltage()\l+ isCharged()\l+ setChargeAllowed()\l+ isHealthy()\l+ service()\l# verify_param()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{AVR910\n|# nCs_\l# nReset_\l|+ AVR910()\l+ init()\l+ program()\l+ program()\l+ readVendorCode()\l+ readPartFamilyAndFlashSize()\l+ readPartNumber()\l# writeFuseBitsLow()\l# readRegister()\l# checkMemory()\l# checkMemory()\l# exitProgramming()\l# lock_spi()\l- enableProgramming()\l- poll()\l- chipErase()\l- loadMemoryPage()\l- writeFlashMemoryByte()\l- writeFlashMemoryPage()\l- readProgramMemory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_a_v_r910.html",tooltip="AVR910 ISP. "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #spi_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{LockedStruct\< SPI \>\n|- value\l- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< SPI \>" ,fontname="Helvetica"];
  Node5 [label="{LockedStruct\< T \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ LockedStruct()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html",tooltip="A locked-struct abstraction. "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
