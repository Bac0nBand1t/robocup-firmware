digraph "MotionControlModule"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{MotionControlModule\n|+ kFrequency\l+ kPeriod\l+ kPriority\l- prevCommand\l- COMMAND_TIMEOUT\l|+ MotionControlModule()\l+ entry()\l- isRecentUpdate()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{GenericModule\n|+ period\l+ name\l+ priority\l+ stackSize\l+ handle\l|+ GenericModule()\l+ start()\l+ entry()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_generic_module.html",tooltip="Interface for all modules, so that they can be ran by the scheduler. "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -dribblerController" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{DribblerController\n|- pv\l- dt\l- MAX_SPEED\l- MIN_SPEED\l- MAX_SPEED_RAMP_TIME\l- MAX_DELTAV_PER_S\l|+ DribblerController()\l+ calculate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_dribbler_controller.html",tooltip="Controller for Dribbler velocity. "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -imuData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{LockedStruct\< IMUData \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{IMUData\n|+ isValid\l+ initialized\l+ lastUpdate\l+ accelerations\l+ omegas\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_i_m_u_data.html",tooltip="Contains linear acceleration and angular velocity readings from IMU. "];
  Node7 -> Node5 [dir="back",color="orange",fontsize="10",style="solid",label=" \< IMUData \>" ,fontname="Helvetica"];
  Node7 [label="{LockedStruct\< T \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ LockedStruct()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html",tooltip="A locked-struct abstraction. "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -motorCommand" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{LockedStruct\< MotorCommand \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{MotorCommand\n|+ isValid\l+ lastUpdate\l+ wheels\l+ dribbler\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_motor_command.html",tooltip="Contains duty cycle commands for individual motors. "];
  Node7 -> Node9 [dir="back",color="orange",fontsize="10",style="solid",label=" \< MotorCommand \>" ,fontname="Helvetica"];
  Node11 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -robotController" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{RobotController\n|- BodyKp\l- BodyKi\l- BodyErrorSum\l- BodyILimit\l- BodyUseILimit\l- BodyInputLimited\l- BodyOutputLimited\l- BodyPrevTarget\l- WheelKp\l- WheelPrevTarget\l- dt\l- numStates\l- numWheels\l- maxWheelAccel\l- maxForwardAccel\l- maxSideAccel\l- maxAngularAccel\l|+ RobotController()\l+ calculateBody()\l+ calculateWheel()\l- limitBodyAccel()\l- limitWheelAccel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_robot_controller.html",tooltip="Controller for wheel velocities. "];
  Node12 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -motorFeedback" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{LockedStruct\< MotorFeedback \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{MotorFeedback\n|+ isValid\l+ lastUpdate\l+ encoders\l+ currents\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_motor_feedback.html",tooltip="Contains current and encoder data for each motor. "];
  Node7 -> Node12 [dir="back",color="orange",fontsize="10",style="solid",label=" \< MotorFeedback \>" ,fontname="Helvetica"];
  Node14 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -batteryVoltage" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{LockedStruct\< BatteryVoltage \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{BatteryVoltage\n|+ isValid\l+ lastUpdate\l+ rawVoltage\l+ isCritical\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_battery_voltage.html",tooltip="Contains battery voltage data and whether it&#39;s at a critical level. "];
  Node7 -> Node14 [dir="back",color="orange",fontsize="10",style="solid",label=" \< BatteryVoltage \>" ,fontname="Helvetica"];
  Node16 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -robotEstimator" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{RobotEstimator\n|- F\l- B\l- H\l- Q\l- R\l- P\l- I\l- x_hat\l- numStates\l- numInputs\l- numOutputs\l- processNoise\l- encoderNoise\l- gyroNoise\l- initCovariance\l|+ RobotEstimator()\l+ predict()\l+ update()\l+ getState()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_robot_estimator.html",tooltip="This class implements a Kalman Filter in order to estimate a robot&#39;s current state. "];
  Node17 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -motionCommand" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{LockedStruct\< MotionCommand \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{MotionCommand\n|+ isValid\l+ lastUpdate\l+ bodyXVel\l+ bodyYVel\l+ bodyWVel\l+ dribbler\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_motion_command.html",tooltip="Contains robot body velocities and dribbler commands. "];
  Node7 -> Node17 [dir="back",color="orange",fontsize="10",style="solid",label=" \< MotionCommand \>" ,fontname="Helvetica"];
}
