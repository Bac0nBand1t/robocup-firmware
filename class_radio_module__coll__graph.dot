digraph "RadioModule"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{RadioModule\n|+ kFrequency\l+ kPeriod\l+ kPriority\l- secondRadioCS\l|+ RadioModule()\l+ start()\l+ entry()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{GenericModule\n|+ period\l+ name\l+ priority\l+ stackSize\l+ handle\l|+ GenericModule()\l+ start()\l+ entry()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_generic_module.html",tooltip="Interface for all modules, so that they can be ran by the scheduler. "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -robotID" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{LockedStruct\< RobotID \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{RobotID\n|+ isValid\l+ lastUpdate\l+ robotID\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_robot_i_d.html",tooltip="Contains data on what ID was selected on the rotary dial. "];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< RobotID \>" ,fontname="Helvetica"];
  Node6 [label="{LockedStruct\< T \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ LockedStruct()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html",tooltip="A locked-struct abstraction. "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -radioError" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{LockedStruct\< RadioError \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{RadioError\n|+ isValid\l+ initialized\l+ lastUpdate\l+ hasError\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_radio_error.html",tooltip="Contains data on whether Radio is working properly on not. "];
  Node6 -> Node8 [dir="back",color="orange",fontsize="10",style="solid",label=" \< RadioError \>" ,fontname="Helvetica"];
  Node10 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -link" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{RadioLink\n||+ RadioLink()\l+ init()\l+ send()\l+ receive()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_radio_link.html",tooltip="Sends and receives data to/from the radio Converts the simplified structures to the rtp packet to sen..."];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -radio" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{std::unique_ptr\< Generic\lRadio \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{GenericRadio\n||+ send()\l+ receive()\l+ isAvailable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_generic_radio.html"];
  Node13 -> Node11 [dir="back",color="orange",fontsize="10",style="solid",label=" \< GenericRadio \>" ,fontname="Helvetica"];
  Node13 [label="{std::unique_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node7 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -fpgaStatus" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{LockedStruct\< FPGAStatus \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{FPGAStatus\n|+ isValid\l+ initialized\l+ lastUpdate\l+ motorHasErrors\l+ FPGAHasError\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_f_p_g_a_status.html",tooltip="Contains data on whether FPGA and motors are working or not. "];
  Node6 -> Node14 [dir="back",color="orange",fontsize="10",style="solid",label=" \< FPGAStatus \>" ,fontname="Helvetica"];
  Node16 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -kickerCommand" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{LockedStruct\< KickerCommand \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{KickerCommand\n|+ isValid\l+ lastUpdate\l+ shootMode\l+ triggerMode\l+ kickStrength\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_kicker_command.html",tooltip="Contains data on whether to kick, chip, kick on breakbeam etc Contains data on whether to kick or chi..."];
  Node6 -> Node16 [dir="back",color="orange",fontsize="10",style="solid",label=" \< KickerCommand \>" ,fontname="Helvetica"];
  Node18 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -kickerInfo" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{LockedStruct\< KickerInfo \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{KickerInfo\n|+ isValid\l+ initialized\l+ lastUpdate\l+ kickerHasError\l+ kickerCharged\l+ ballSenseTriggered\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_kicker_info.html",tooltip="Contains status on kicker and breakbeam. "];
  Node6 -> Node18 [dir="back",color="orange",fontsize="10",style="solid",label=" \< KickerInfo \>" ,fontname="Helvetica"];
  Node20 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -batteryVoltage" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{LockedStruct\< BatteryVoltage \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{BatteryVoltage\n|+ isValid\l+ lastUpdate\l+ rawVoltage\l+ isCritical\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_battery_voltage.html",tooltip="Contains battery voltage data and whether it&#39;s at a critical level. "];
  Node6 -> Node20 [dir="back",color="orange",fontsize="10",style="solid",label=" \< BatteryVoltage \>" ,fontname="Helvetica"];
  Node22 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -motionCommand" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{LockedStruct\< MotionCommand \>\n|- mutex_depth\l- mutex\l|+ LockedStruct()\l+ LockedStruct()\l+ LockedStruct()\l+ operator=()\l+ operator=()\l+ ~LockedStruct()\l+ lock()\l+ unsafe_value()\l- acquire_mutex()\l- release_mutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_locked_struct.html"];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -value" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{MotionCommand\n|+ isValid\l+ lastUpdate\l+ bodyXVel\l+ bodyYVel\l+ bodyWVel\l+ dribbler\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_motion_command.html",tooltip="Contains robot body velocities and dribbler commands. "];
  Node6 -> Node22 [dir="back",color="orange",fontsize="10",style="solid",label=" \< MotionCommand \>" ,fontname="Helvetica"];
}
