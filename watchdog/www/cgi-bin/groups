#!/usr/bin/python
# -*- coding: utf-8 -*-

import socket
hostname = socket.gethostname()

import datetime
from watchdog import *
from process_status import *

header()

# Header
print '<html>'
print '<head><title>%s Process Groups</title>' % hostname 
print '<link rel=stylesheet href="' + stylesheet + '"/>'

write_refresh_header()

print '</head>'
print '<body>'

# Date and time
dt = datetime.datetime.now()
print '<div class="time">' + dt.ctime() + '</div>'

# Get status
host_status = get_all_status()

for host in hosts:
	if type(host_status[host]) == type(Exception):
		print '<div class="error">Failed to get status of', host, ':', ex, '</div>'

write_refresh_combo('groups')
write_host_list(host_status)

# Make sure the group order is usable
for name in process_groups:
	if not name in group_order:
		group_order.append(name)
for name in group_order:
	if not name in process_groups:
		group_order.remove(name)

print '<h3>Process Groups:</h3>'

# Process groups
print '<table class="status">'
print '<tr><th>Name</th><th>Running</th><th colspan=4 class="control">Control</th></tr>'
for name in group_order:
	group = process_groups[name]
	
	# Count number of running processes
	running = 0
	total_procs = 0
	for (host, processes) in group:
		num_procs = len(processes)
		total_procs += num_procs

		if host not in host_status or type(host_status[host]) != type(()):
			continue;
		status = host_status[host][0]
		
		for proc in processes:
			if proc in status and status[proc]['running'] == '1':
				running += 1
	
	# Class for number-of-running-processes text
	if running == 0:
		running_class  = 'stopped'
	elif running == total_procs:
		running_class = 'running'
	else:
		running_class = 'partial'
	
	# Print the row
	print '<tr>'
	print '  <td>' + name + '</td>'
	print '  <td class="' + running_class + '">' + repr(running) + ' / ' + repr(total_procs) + '</td>'
	print '  <td class="control">' + make_link('Start', 'group_command', {'group':name, 'cmd':'start', 'arg':remote_addr}) + '</td>'
	print '  <td class="control">' + make_link('Stop', 'group_stop', {'group':name}) + '</td>'
	print '  <td class="control">' + make_link('Enable', 'group_command', {'group':name, 'cmd':'enable'}) + '</td>'
	print '  <td class="control">' + make_link('Disable', 'group_command', {'group':name, 'cmd':'disable'}) + '</td>'
	print '</tr>'
print '</table>'

for name in group_order:
	group = process_groups[name]
	
	print '<div class="status">'
	print '<div class="header"><span class="title">' + name + ':</span></div>'
	
	print '<table class="status">'
	print '<tr><th>Host</th><th>Name</th><th colspan=2>Running</th><th>Enabled</th><th>Restarts</th><th>CPU</th><th>Memory</th><th>PID</th>'
	print '<th colspan=5 class="control">Control</th></tr>'
	
	dark = False
	for (host, processes) in group:
		if host in host_status and type(host_status[host]) == type(()):
			status = host_status[host][0]
			err = 'No such process'
		else:
			status = {}
			err = 'No such host'
		
		for proc in processes:
			if dark:
				print '<tr class="dark">'
			else:
				print '<tr>'
			dark = not dark

			print '<td>' + host + '</td>'
			if proc in status:
				write_process_status(host, proc, status[proc], 'groups')
			else:
				print '<td>' + proc + '</td><td colspan=11 class="error">' + err + '</td>'
			print '</tr>'

	print '</table></div>'

# Ethernet usage by host and interface

# List of all interfaces
interfaces = []

# Dictionary: host => interface => (rx_rate, tx_rate)
if_stats = {}

for host in hosts:
	if type(host_status[host]) != type(()):
		if_stats[host] = {}
		continue

	machine_status = host_status[host][1]
	if 'net' in machine_status:
		net = machine_status['net']
		host_if_stats = {}
		for (dev, rx_bytes, tx_bytes, rx_rate, tx_rate) in make_list(machine_status['net']):
			host_if_stats[dev] = (rx_rate, tx_rate)
			if not dev in interfaces:
				interfaces.append(dev)
		if_stats[host] = host_if_stats;

print '<h3>Ethernet Usage:</h3>'
if interfaces:
	print '<table class="status">'
	print '<tr><th rowspan=2>Host</th>'
	for dev in interfaces:
		print '<th colspan=2>' + dev + '</th>'
	print '</tr>'
	print '<tr>' + '<th>RX</th><th>TX</th>' * len(interfaces) + '</tr>'

	dark = False
	for host in hosts:
		if dark:
			print '<tr class="dark">'
		else:
			print '<tr>'
		dark = not dark

		print '<td>' + host + '</td>'
		host_if_stats = if_stats[host]
		for dev in interfaces:
			if dev in host_if_stats:
				(rx_rate, tx_rate) = host_if_stats[dev]
				rx_rate = '%.0f' % (float(rx_rate) / 1024);
				tx_rate = '%.0f' % (float(tx_rate) / 1024);
				print '<td>' + rx_rate + ' kB/s</td><td>' + tx_rate + ' kB/s</td>'
			else:
				print '<td colspan=2></td>'

		print '</tr>'

	print '</table>'
else:
	print 'Not available<br/>'
