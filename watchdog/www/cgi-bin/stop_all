#!/usr/bin/python

from watchdog import *

def stop_all(host):
    # One host
    wd = watchdog(host)
    status = wd.process_status()
    
    for proc in status:
        eproc = escape(proc)
        
        # RuntimeErrors are ignored since the most likely cause is
        # that the process died or was disabled just after the status
        # was received.  The user can figure out what
        # happened at the status page.
        try:
            if status[proc]['enabled'] == '1':
                wd.command('disable ' + eproc)
        except RuntimeError:
            pass
        
        try:
            if status[proc]['running'] == '1':
                wd.command('signal ' + eproc + ' 15')
        except RuntimeError:
            pass

host = form.getvalue('host')
if host == None or host == '':
    # All hosts
    for x in hosts:
        try:
            stop_all(x)
        except:
            pass
else:
    stop_all(host)

print 'Location: ' + get_param('ret', 'status')
print ''
